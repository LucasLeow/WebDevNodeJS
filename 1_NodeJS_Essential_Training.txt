-- Introduction --
	- JS thought as front-end tech (interactivity with Web apps)
		- eg: JS for Browser (DOM)
	- NodeJS, can use JS for Backend
		- Command line tools
		- Creating servers
		- Interacting with file system
		- Build Scalable event-driven applications

	- Can become fullstack with HTML, CSS and JS
	

-- 1 What is Node.js --

-- 1-1 Node.js History --
	- Created in 2009 as JS runtime based on Chrome VA engine
	- 2011: npm created
		- sharing of open-source node libraries
		- huge shift in how code was shared & maintained
	- 2015: Node.js Foundation created
		- Made up of several large companies
			- IBM, Microsoft, Paypal etc.
		- help maintain standards & growth of library
-- 1-2 Installing Node.js --

	- Current version: 
		- Include all latest features
		
	- LTS version:
		- most stable version


-- 2 Node Globals --
	- Explore what is commonly used in global namespace for typical Node.js files

-- 2-1 Inspecting global object --

	- In browser, global object called window
	- In NodeJS, global object called global
	- Global object contains:
		1) Objects
		2) Values
		3) Methods
		
		that can be used in any node.js files without having to import anything
	
	
	
		eg. console.log("Hello world");
		// same as global.console.log("Hello world");
		
	- variables created within a file have their namespace scoped to that file 
	eg. 
	
		let hello = "Hello from Node.js";
		console.log(global.hello) // is undefined because hello not scoped to global ns
		
		let name = "Lucas";
		console.log(`Hello ${name}`); // template string
		
-- 2-2 require() function --
	- typically used for importing other modules

	Some global methods and objects:
		const path = require("path");
		// "path" module, one of core modules in node.js
	
		- console.log(__dirname); // directory where file is located
		- console.log(__filename); // current file path (entire)